def tf(command, myParam){
     withCredentials([[
        $class: 'AmazonWebServicesCredentialsBinding',
        credentialsId: 'AWS56',
        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
        ]])
        {
          sh "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
          sh "terraform ${command} -var 'aws_access_key=$AWS_ACCESS_KEY_ID' -var 'aws_secret_key=$AWS_SECRET_ACCESS_KEY' ${myParam}"
        }
    }

pipeline {
    agent any
    tools {
        "org.jenkinsci.plugins.terraform.TerraformInstallation" "terraform-0.11.7"
    }
 
    environment {
        TF_HOME = tool('terraform-0.11.7')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"
    }
 
    stages {
        stage('Git Clone'){
            steps {
                    sh 'rm -r $WORKSPACE/*'
                    sh 'git clone https://github.com/Chris-B-Prog/jenkinstest.git'
            }
        }
 
        stage('Terraform Init'){
            steps {
                    tf("init","-from-module=jenkinstest")
                    sh 'terraform --version'
                    sh "echo \$PWD"
                    sh "whoami"
 
            }
        }
 
        stage('Terraform Plan'){
            steps {
                tf("plan", "")
            }
        }
 
        stage('Terraform Apply'){
            steps {
                tf("apply", "-auto-approve")
            }
        }
 
        stage('Terraform Destroy'){
            steps {
                tf("destroy", "auto-approve")
            }
        }
    }
}